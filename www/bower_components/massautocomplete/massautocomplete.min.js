angular.module("MassAutoComplete",[]).directive("massAutocomplete",["$timeout","$window","$document","$q",function($timeout,$window,$document,$q){return{restrict:"A",scope:{options:"&massAutocomplete"},transclude:true,template:"<div ng-transclude></div>"+'<div class="ac-container" ng-show="show_autocomplete && results.length" style="position:absolute;">'+'  <ul class="ac-menu">'+'    <li ng-repeat="result in results" ng-if="$index > 0"'+"        class=\"ac-menu-item\" ng-class=\"$index == selected_index ? 'ac-state-focus' : ''\">"+
'      <a href ng-click="apply_selection($index,$event)" ng-bind-html=result.label> </a>'+"    </li>"+"  </ul>"+"</div>",link:function(scope,element){scope.container=element.find(".ac-container")},controller:["$scope",function($scope){var that=this;var KEYS={TAB:9,ESC:27,ENTER:13,UP:38,DOWN:40};var EVENTS={KEYDOWN:"keydown.ac"+$scope.$id,RESIZE:"resize.ac"+$scope.$id,BLUR:"blur.ac"+$scope.$id};var _user_options=$scope.options()||{};var user_options={debounce_position:_user_options.debounce_position||
150,debounce_attach:_user_options.debounce_attach||300,debounce_suggest:_user_options.debounce_suggest||200,debounce_blur:_user_options.debounce_blur||150};var current_element,current_model,current_options,previous_value,value_watch,last_selected_value;$scope.show_autocomplete=false;function debounce(func,wait,immediate){var timeout;return function(){var context=this,args=arguments;var later=function(){timeout=null;if(!immediate)func.apply(context,args)};var callNow=immediate&&!timeout;clearTimeout(timeout);
timeout=setTimeout(later,wait);if(callNow)func.apply(context,args)}}function _position_autocomplete(){var pos=current_element.offset(),h=current_element.outerHeight(),w=current_element.outerWidth();$scope.container.css({top:pos.top+h,left:pos.left,width:w})}var position_autocomplete=debounce(_position_autocomplete,user_options.debounce_position);function _attach(ngmodel,target_element,options){if(current_element===target_element)return;if(current_element)that.detach();if(target_element[0]!==$document[0].activeElement)return;
options["on_attach"]&&options.on_attach();current_element=target_element;current_model=ngmodel;current_options=options;previous_value=ngmodel.$viewValue;$scope.results=[];$scope.selected_index=-1;bind_element();value_watch=$scope.$watch(function(){return ngmodel.$modelValue},function(nv,ov){if(nv===last_selected_value)return;if($scope.results)$scope.results.length=0;_position_autocomplete();suggest(nv)})}that.attach=debounce(_attach,user_options.debounce_attach);function _suggest(term){$scope.selected_index=
0;$scope.show_autocomplete=false;$scope.waiting_for_suggestion=true;if(typeof term==="string"&&term.length>0)$q.when(current_options.suggest(term),function suggest_succeeded(suggestions){if(suggestions&&suggestions.length){$scope.results=[{value:term,label:""}].concat(suggestions);$scope.show_autocomplete=true}else $scope.results=[]},function suggest_failed(error){current_options.on_error&&current_options.on_error(error)})["finally"](function suggest_finally(){$scope.waiting_for_suggestion=false});
else{$scope.waiting_for_suggestion=false;$scope.$apply()}}var suggest=debounce(_suggest,user_options.debounce_suggest);that.detach=function(){if(current_element){update_model_value();current_options.on_detach&&current_options.on_detach(current_element.val())}$scope.show_autocomplete=false;current_element.unbind(EVENTS.KEYDOWN);current_element.unbind(EVENTS.BLUR);angular.element($window).unbind(EVENTS.RESIZE);value_watch();$scope.selected_index=$scope.results=undefined;current_model=current_element=
previous_value=undefined};function update_model_value(){var val=current_element.val();if(current_model.$modelValue!==val){current_model.$setViewValue(val);current_model.$render()}return val}function set_selection(i){current_element.val($scope.results[i].value);$scope.selected_index=i}$scope.apply_selection=function(i){current_element.focus();if(!$scope.show_autocomplete||i>$scope.results.length||i<0)return;set_selection(i);last_selected_value=update_model_value();$scope.show_autocomplete=false;current_options.on_select&&
current_options.on_select($scope.results[$scope.selected_index])};function bind_element(){angular.element($window).bind(EVENTS.RESIZE,position_autocomplete);current_element.bind(EVENTS.BLUR,function(){$timeout(function(){if(!current_element||current_element[0]!==$document[0].activeElement)that.detach()},user_options.debounce_blur)});current_element.bind(EVENTS.KEYDOWN,function(e){if(e.shiftKey)return;switch(e.keyCode){case KEYS.ESC:if($scope.show_autocomplete){$scope.show_autocomplete=false;$scope.$apply()}else current_element.val(previous_value);
break;case KEYS.ENTER:if($scope.show_autocomplete&&$scope.selected_index>0&&!$scope.waiting_for_suggestion){$scope.apply_selection($scope.selected_index);e.stopPropagation()}$scope.show_autocomplete=false;$scope.$apply();break;case KEYS.TAB:if(!$scope.show_autocomplete)break;e.preventDefault();case KEYS.DOWN:if($scope.results.length){if($scope.show_autocomplete)set_selection($scope.selected_index+1>$scope.results.length-1?0:$scope.selected_index+1);else{$scope.show_autocomplete=true;$scope.selected_index=
0}$scope.$apply()}break;case KEYS.UP:if($scope.show_autocomplete){e.preventDefault();set_selection($scope.selected_index-1>=0?$scope.selected_index-1:$scope.results.length-1);$scope.$apply()}break}})}$scope.$on("$destroy",function(){that.detach();$scope.container.remove()})}]}}]).directive("massAutocompleteItem",function(){return{restrict:"A",require:["^massAutocomplete","ngModel"],scope:false,link:function(scope,element,attrs,required){attrs.$set("autocomplete","off");element.bind("focus",function(){var options=
scope[attrs.massAutocompleteItem];if(!options)throw"Invalid options";required[0].attach(required[1],element,options)})}}});
