// Generated by CoffeeScript 1.9.3
(function () {
    define(["angular", "framework/msg/GillionMsgModule", "underscore", "framework/imageViewer/GillionImageViewerModule"], function (angular) {
        var UploadDefaultSettings, UploadModule, browserVersion, defaultImageFileExtensions, isIE, isImageFile, preview;
        UploadModule = angular.module("UploadModule", ["GillionMsgModule", "GillionImageViewerModule"]);
        UploadDefaultSettings = {
            iconInfos: {
                "fi-file-word": ["docx", "dotx", "doc", "dot", "docm", "xps", "rtf", "wtf", "odt"],
                "fi-file-pdf": ["pdf"],
                "fi-file-excel": ["xlsx", "xlsm", "xlsb", "xltx", "xltm", "xls", "xlt", "xls", "xml", "xlam", "xla", "xlw", "csv"],
                "fi-file-ppt": ["pptx", "pptm", "ppt", "xps", "potx", "potm", "pot", "thmx", "pps", "ppsm", "ppam", "ppa"],
                "fi-file-rar": ["rar", "zip", "zz", "zix", "zipx", "z", "yz", "war", "tgz", "rpm", "rz", "jar", "gzip"]
            }
        };
        defaultImageFileExtensions = ["bpm", "png", "jepg", "gif", "jpg"];
        isImageFile = function (ext) {
            return _.indexOf(defaultImageFileExtensions, ext) !== -1;
        };
        if (/msie/.test(navigator.userAgent.toLowerCase())) {
            isIE = true;
        } else {
            isIE = false;
        }
        browserVersion = navigator.userAgent.toUpperCase();
        preview = function (fileObj, imgContainer, divContainer) {
            var firefoxVersion, imagePath, previewContainer, reader;
            fileObj = fileObj[0];
            if (fileObj.files) {
                if (window.FileReader) {
                    reader = new FileReader();
                }
                reader.onload = function (e) {
                    return imgContainer.attr("src", e.target.result);
                };
                reader.readAsDataURL(fileObj.files[0]);
            } else if (isIE) {
                fileObj.select();
                previewContainer = divContainer.find(".preview-container");
                imagePath = document.selection.createRange().text;
                imgContainer[0].style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod='scale',src='" + imagePath + "')";
            } else if (browserVersion.indexOf("FIREFOX") > -1) {
                firefoxVersion = parseFloat(browserVersion.toLowerCase().match(/firefox\/([\d.]+)/)[1]);
                if (firefoxVersion < 7) {
                    imgContainer.attr("src", fileObj.files[0].getDatURL());
                } else {
                    imgContainer.attr("src", window.URL.createObjectURL(fileObj.files[0]));
                }
            } else {
                imageShowSrc.attr("src", fileObj.val());
            }
        };
        return UploadModule.directive("gUpload", function (Arrays, $timeout, ImageViewerService) {
            var Uploader, template;
            Uploader = (function () {
                function Uploader($scope1, $element1, $attr1, $uploadGroup1) {
                    this.$scope = $scope1;
                    this.$element = $element1;
                    this.$attr = $attr1;
                    this.$uploadGroup = $uploadGroup1;
                    this.action = this.$uploadGroup.uploadUrl;
                    this.uploadType = this.$uploadGroup.uploadType;

                    /*1.初始化时，先在控件上创建一个表单 */
                    this.createInput();
                    this.settings = {
                        responseType: this.$attr.dataType || "json",
                        data: {}
                    };
                    this.uid = 0;
                    this.Msg = angular.element(document).injector().get("GillionMsg");
                }

                Uploader.prototype.fileFromPath = function (path) {
                    return path.replace(/.*(\/|\\)/, "");
                };

                Uploader.prototype.getExt = function (file) {
                    var ext;
                    ext = -1 !== file.indexOf('.') ? file.replace(/.*[.]/, '') : '';
                    return ext.toLowerCase();
                };

                Uploader.prototype.getIconClass = function (file) {
                    var ext, i, item, key, len, ref, value;
                    ext = this.getExt(file);
                    ref = UploadDefaultSettings.iconInfos;
                    for (key in ref) {
                        value = ref[key];
                        for (i = 0, len = value.length; i < len; i++) {
                            item = value[i];
                            if (ext === item) {
                                return key;
                            }
                        }
                    }
                };

                Uploader.prototype.getFileSize = function () {
                    var fileSize;
                    if (isIE) {

                        /*IE下不进行大小验证 */
                        fileSize = 0;
                    } else {
                        fileSize = this._input[0].files[0].size;
                    }
                    return fileSize / 1024;
                };

                Uploader.prototype.clearImagePreview = function () {
                    var uploadBtn;
                    uploadBtn = this.$element.find(".form-upload-btn-img");
                    uploadBtn.find("img").attr("src", "");
                    uploadBtn.find("img").css("filter", "");
                };


                /*清除上传表单 */

                Uploader.prototype.clearInput = function () {
                    if (!this._input) {
                        return;
                    }
                    this.element.find(this._input).remove();
                    this._input = null;
                    return this.createInput();
                };


                /*创建上传表单 */

                Uploader.prototype.createInput = function () {
                    var self;
                    this._input = angular.element('<input name="upfile" type="file">');
                    self = this;
                    self.uploadContainer = {
                        settings: {
                            data: {}
                        }
                    };
                    this._input.on("change", function () {
                        if (!self._input || self._input.val() === '') {
                            return;
                        }
                        if (self.$uploadGroup.beforeUpload) {
                            if (self.$uploadGroup.beforeUpload({
                                    "file": self._input.val(),
                                    "uploadContainer": self.uploadContainer
                                }) === false) {
                                return;
                            }
                        }

                        /*从后台获取key */
                        self.$uploadGroup.loadUploadInfo(function (uploadInfo) {

                            /*1.判断是否是指定类型 */
                            var changeStatus, extension, fileName, size;
                            extension = self.getExt(self._input.val());
                            if (!Arrays.exists(uploadInfo.limitType, extension)) {
                                self.Msg.alert("提示信息", "上传失败，上传的文件类型非法！");
                                return;
                            }

                            /*2.判断是否符合限定大小 */
                            size = self.getFileSize();
                            if (size > uploadInfo.limitSize) {
                                self.Msg.alert("提示信息", "上传失败，上传的文件超过最大大小：" + uploadInfo.limitSize + "KB！");
                                return;
                            }

                            /*3.判断当前上传是否为最后一个，是否超过限定数量 */
                            if (self.$uploadGroup.uploadFiles.length === uploadInfo.limitCount) {
                                self.Msg.alert("提示信息", "上传失败，上传的文件超过最大数量：" + uploadInfo.limitCount + "！");
                                return;
                            }
                            fileName = self.fileFromPath(self._input.val());
                            changeStatus = function () {
                                var divContainer, iconClass, imgContainer;
                                if (isImageFile(extension)) {
                                    self.$scope.fileType = 1;
                                    divContainer = self.$element.find(".form-upload-btn-img");
                                    imgContainer = divContainer.find("img");
                                    preview(self._input, imgContainer, divContainer);
                                } else {
                                    self.$scope.fileType = 0;
                                    iconClass = self.getIconClass(fileName);
                                    self.$scope.fileIcon[iconClass] = true;
                                }
                                return self.$scope.uploadStatus = 1;
                            };
                            if (self.$scope.$root.$$phase) {
                                changeStatus();
                            } else {
                                self.$scope.$apply(changeStatus);
                            }
                            self.$element.find(".form-upload-item-text").html(fileName);
                            self.$element.attr("state", "uploading");

                            /*若选项不为空值，则进行上传操作 */
                            self.submit();
                        });
                    });
                    return this.$element.append(this._input);
                };


                /*创建上传form */

                Uploader.prototype.createForm = function (iframe) {
                    var dataInput, form, key, ref, self, value;
                    self = this;
                    form = angular.element('<form method="post" enctype="multipart/form-data"></form>');
                    form.attr("action", this.action);
                    form.attr("target", iframe.attr("name"));
                    form.css("display", "none");
                    angular.element(document.body).append(form);

                    /*创建需要提交的隐藏表单 */
                    this.settings.data = {
                        key: self.$uploadGroup.key
                    };
                    angular.extend(this.settings.data, self.$uploadGroup.uploadExtraData);
                    angular.extend(this.settings.data, self.uploadContainer.settings.data);
                    ref = this.settings.data;
                    for (key in ref) {
                        value = ref[key];
                        dataInput = angular.element('<input type="hidden">');
                        dataInput.attr("name", key);
                        dataInput.attr("value", value);
                        form.append(dataInput);
                    }
                    this.settings.data = {};
                    return form;
                };


                /*创建Iframe */

                Uploader.prototype.createIframe = function () {
                    var iframe;
                    this.uid++;
                    iframe = angular.element('<iframe src="javascript:false;" />');
                    iframe.attr("id", this.uid);
                    iframe.attr("name", this.uid);
                    iframe.css("display", "none");
                    angular.element(document.body).append(iframe);
                    return iframe;
                };


                /*获取响应 */

                Uploader.prototype.getResponse = function (file) {
                    var frame, self;
                    self = this;
                    frame = this.iframe[0];
                    this.iframe.on('load', function () {
                        var doc, e, response;
                        if (frame.src === "%3Chtml%3E%3C/html%3E;" || frame.src === "javascript:'<html></html>") {
                            if (deleteFlag) {
                                setTimeout(function () {
                                    return self.removeNode(iframe, 0);
                                });
                            }
                            return;
                        }
                        doc = frame.contentDocument ? frame.contentDocument : window.frames[frame.id].document;
                        if (doc.readyState && doc.readyState !== 'complete') {
                            return;
                        }
                        if (doc.body && doc.body.innerHtml === 'false') {
                            return;
                        }
                        if (doc.XMLDocument) {
                            response = doc.XMLDocument;
                        } else if (doc.body) {
                            response = doc.body.innerHTML;
                            if (self.settings.responseType && self.settings.responseType.toLowerCase() === 'json') {
                                if (doc.body.firstChild && doc.body.firstChild.nodeName.toUpperCase() === 'PRE') {
                                    response = doc.body.firstChild.firstChild.nodeValue;
                                }
                                if (response) {
                                    try {
                                        response = self.$scope.$eval(response);
                                        if (!response.success) {
                                            self.Msg.alert("提示信息", response.errorMessages);
                                        }
                                    } catch (_error) {
                                        e = _error;
                                        self.Msg.alert("提示信息", "上传失败，请重新上传！");
                                        self.$scope.$apply(function () {
                                            self.$scope.uploadStatus = 0;
                                            self.$element.find(".form-upload-item-text").html("");
                                        });
                                        self.iframe.remove();
                                        self.$element.removeAttr("state");
                                        self.iframe = null;
                                        if (!(self.$scope.fileType = 1)) {
                                            self.clearImagePreview();
                                        }
                                        self.createInput();
                                        return;
                                    }
                                } else {
                                    response = {};
                                }
                            }
                        } else {
                            response = doc;
                        }
                        self.$scope.$emit("success", response);
                        self.$uploadGroup.addFile(self.$attr.fileMarker, response.data);
                        if (self.$uploadGroup.onUpload) {
                            self.$uploadGroup.onUpload({
                                "fileInfo": response.data
                            });
                        }

                        /*判断是否是最后一个文件，若是则判断显示的数量是否小于限制数量，若是，则新增一个上传项 */
                        if (self.$uploadGroup.uploadFiles.length === self.$uploadGroup.initialShowCount && self.$uploadGroup.uploadFiles.length < self.$uploadGroup.uploadInfo.limitCount) {
                            self.$uploadGroup.addFileUpload();
                        }
                        self.$scope.$apply(function () {
                            self.$scope.uploadStatus = 2;
                        });
                        self.$element.removeAttr("state");
                        self.iframe.remove();
                        self.iframe = null;
                    });
                    this.iframe.on('error', function () {
                        var deleteFlag, iframe;
                        self.$scope.$apply(function () {
                            self.$scope.uploadStatus = 0;
                            self.$element.find(".form-upload-item-text").html("");
                        });
                        self.clearImagePreview();
                        deleteFlag = true;
                        iframe.remove();
                        iframe = null;
                        self.createInput();
                    });
                };


                /*上传文件 */

                Uploader.prototype.submit = function () {
                    var file, form;
                    file = this.fileFromPath(this._input.val());
                    this.iframe = this.createIframe();
                    form = this.createForm(this.iframe);
                    form.append(this._input);
                    form.submit();
                    form.remove();
                    form = null;
                    this._input.remove();
                    this._input = null;
                    return this.getResponse(this.iframe, file);
                };

                return Uploader;

            })();
            template = '<div class="form-upload-item"> <button class="btn form-upload-btn-add" ng-show="uploadStatus==0"> <i class="fi fi-add"></i> <span>上传文件</span> </button> <button class="btn form-upload-btn-del" ng-show="uploadStatus!=0" ng-click="deleteFile($event)"><i class="fi fi-close-xs"></i></button> <div class="form-upload-icon" ng-show="uploadStatus!=0"> <button class="btn form-upload-btn-icon" ng-show="fileType==0"> <i class="fi" ng-class="fileIcon"></i> </button> <button class="btn form-upload-btn-img" ng-show="fileType==1" ng-click="viewer()"> <img width="78" height="78"> </button> <div class="form-upload-item-mask"> </div> <div class="form-upload-item-uploading">上传中</div> </div> <div class="form-upload-item-text" ng-show="uploadStatus!=0"> </div> </div>';
            return {
                template: template,
                restrict: "E",
                scope: {
                    fileId: "@",
                    fileName: "@",
                    imageShowUrl: "@",
                    fileItem:"="
                },
                require: ["^?gUploadGroup"],
                replace: true,
                link: function ($scope, $element, $attr, $ctrls) {
                    var $uploadGroup, extension, iconClass, uploader;
                    $uploadGroup = $ctrls[0];
                    $scope.fileIcon = {};
                    uploader = new Uploader($scope, $element, $attr, $uploadGroup);
                    $scope.uploadStatus = 0;
                    $scope.deleteFile = function ($event) {
                        $uploadGroup.deleteFile($attr.fileMarker, function () {
                            $scope.uploadStatus = 0;
                            $element.removeAttr("state");
                            $element.find(".form-upload-item-text").html("");
                            if (uploader.iframe) {
                                uploader.iframe.remove();
                                uploader.iframe = null;
                            }
                            uploader.createInput();
                            return uploader.clearImagePreview();
                        });
                    };

                    $scope.viewer = function () {
                        ImageViewerService.viewer($uploadGroup.uploadFiles, $attr.fileMarker);
                    };

                    /*说明为已上传 */
                    $scope.$watch("fileItem", function (fileItem, oldValue) {
                        if ($scope.fileItem.fileInfo && $scope.fileItem.fileInfo.id && $scope.fileItem.fileInfo.fileName) {
                            extension = uploader.getExt($scope.fileItem.fileInfo.fileName);
                            if (isImageFile(extension)) {
                                $scope.fileType = 1;
                            } else {
                                $scope.fileType = 0;
                            }
                            $element.find(".form-upload-item-text").html($scope.fileItem.fileInfo.fileName);
                            if (!isImageFile(extension)) {
                                iconClass = uploader.getIconClass($scope.fileItem.fileInfo.fileName);
                                $scope.fileIcon = {};
                                $scope.fileIcon[iconClass] = true;
                            } else {
                                $timeout(function () {
                                    return $element.find(".form-upload-btn-img").find("img").attr("src", $scope.fileItem.imageShowUrl);
                                });
                            }
                            $scope.uploadStatus = 2;
                            uploader._input.remove();
                            uploader._input = null;
                        }
                    },true);

                }
            };
        });
    });

}).call(this);
