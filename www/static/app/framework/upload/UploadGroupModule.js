// Generated by CoffeeScript 1.9.3
(function() {
  define(["angular", "framework/upload/UploadModule","framework/snapshot/GillionSnapshotModule"], function(angular) {
    var UploadGroupModule, template;
    UploadGroupModule = angular.module("UploadGroupModule", ["UploadModule","GillionSnapshotModule"]);
    template = '<div class="form-upload"><g-upload file-marker="{{item.fileMarker}}" file-item="item" ng-repeat="item in items" file-name="{{item.fileInfo.fileName}}"  file-id="{{item.fileInfo.id}}" image-show-url="{{item.imageShowUrl}}"></g-upload>' +
    '<span ng-if="photograph"><div class="form-upload-item"><button class="btn form-upload-btn-add" ng-click="showPhotograph()"><i class="fi fi-camera"></i><span>在线拍照</span></button></div><g-snapshot url="{{photographUrl}}"></g-snapshot></span></div>';
    return UploadGroupModule.directive("gUploadGroup", function($http, $parse, Arrays) {
      var defaultImageFileExtensions, initEnv, isImageFile, ngModelListener;
      ngModelListener = function($scope, $ngModel, value) {
        if ($scope.valueProp) {
          if (angular.isArray(value)) {
            //11111
            value = Arrays.extractToArray(value, $scope.valueProp);
          } else {
            value = value[$scope.valueProp];
          }
        }
        if (angular.isDefined($ngModel)) {
          if ($ngModel.$viewValue !== value) {
            if ($scope.$root.$$phase) {
              return $ngModel.$setViewValue(value);
            } else {
              return $scope.$apply(function() {
                return $ngModel.$setViewValue(value);
              });
            }
          }
        }
      };
      defaultImageFileExtensions = ["bpm", "png", "jepg", "gif", "jpg"];
      isImageFile = function(file) {
        var ext;
        ext = -1 !== file.indexOf('.') ? file.replace(/.*[.]/, '') : '';
        ext = ext.toLowerCase();
        return defaultImageFileExtensions.indexOf(ext) !== -1;
      };
      initEnv = function($scope) {
        $scope.limitTypeProp = $scope.limitTypeProp || "limitType";
        $scope.limitSizeProp = $scope.limitSizeProp || "limitSize";
        $scope.limitCountProp = $scope.limitCountProp || "limitCount";
        $scope.uploadTypeProp = $scope.uploadTypeProp || "uploadType";
        $scope.keyParam = $scope.keyParam || "key";
        $scope.imageShowUrlProp = $scope.imageShowUrlProp || "smallThumbnail";
        $scope.fileIdProp = $scope.fileIdProp || "id";
        $scope.fileNameProp = $scope.fileNameProp || "fileName";
        $scope.limitTypeGetter = $parse($scope.limitTypeProp);
        $scope.limitSizeGetter = $parse($scope.limitSizeProp);
        $scope.limitCountGetter = $parse($scope.limitCountProp);
        $scope.uploadTypeGetter = $parse($scope.uploadTypeProp);
        $scope.keyGetter = $parse($scope.keyParam);
        $scope.fileIdGetter = $parse($scope.fileIdProp);
        $scope.fileNameGetter = $parse($scope.fileNameProp);
        $scope.imageShowUrlGetter = $parse($scope.imageShowUrlProp);
        $scope.keySetter = $scope.keyGetter.assign;
        $scope.fileIdSetter = $scope.fileIdGetter.assign;
        return $scope.fileNameSetter = $scope.fileNameGetter.assign;
      };
      return {
        template: template,
        restrict: "E",
        scope: {
          key: "@",
          uploadInfoUrl: "@",
          uploadUrl: "@",
          deleteUrl: "@",
          beforeUpload: "&",
          onUpload: "&",
          valueProp: "@",
          deleteParams: "=",
          keyParam: "@",
          limitTypeProp: "@",
          uploadTypeProp: "@",
          limitSizeProp: "@",
          limitCountProp: "@",

          /*用于ngModel的解析与删除时的解析 */
          fileIdProp: "@",
          fileNameProp: "@",

          /*用于有ngModel时，自动获取图片url进行显示 */
          imageShowUrlProp: "@",

          /*上传时想额外添加的数据 */
          uploadExtraData: "="
        },
        require: ["^?ngModel", "^?gUploadGroup"],
        controller: function($scope, $element, $attrs) {


          /*1.初始化字段环境 */
          var fileIdProp, self;
          initEnv($scope);
          self = this;
          fileIdProp = $scope.fileIdProp;
          self.uploadFiles = [];
          if (!$scope.uploadUrl) {
            $scope.uploadUrl = $scope.uploadInfoUrl;
          }
          self.uploadUrl = $scope.uploadUrl;
          if (!$scope.deleteUrl) {
            $scope.deleteUrl = $scope.uploadInfoUrl;
          }
          self.deleteUrl = $scope.deleteUrl;
          self.uploadExtraData = $scope.uploadExtraData;
          self.key = $scope.key;
          self.beforeUpload = $scope.beforeUpload;
          self.onUpload = $scope.onUpload;
          this.$scope = $scope
          /*加载上传信息 */
          this.loadUploadInfo = function(callback) {
            var params;
            if (!self.uploadInfo) {
              params = {};
              $scope.keySetter(params, $scope.key);
              return $http.get.apply($scope, [
                $scope.uploadInfoUrl, {
                  params: params
                }
              ]).success(function(data) {
                var limitCount, limitSize, limitType, uploadType;
                limitType = $scope.limitTypeGetter(data);
                limitSize = $scope.limitSizeGetter(data);
                limitCount = $scope.limitCountGetter(data);
                uploadType = $scope.uploadTypeGetter(data);
                self.uploadInfo = {
                  limitType: limitType,
                  limitSize: limitSize,
                  limitCount: limitCount,
                  uploadType: uploadType
                };
                if (angular.isFunction(callback)) {
                  return callback(self.uploadInfo);
                }
              });
            } else {
              return callback(self.uploadInfo);
            }
          };
          this.addFile = function(fileMarker, fileInfo,imageShowUrl) {
            var fileInfos;
            self.uploadFiles.push({
              fileMarker: fileMarker,
              fileInfo: fileInfo,
              imageShowUrl:imageShowUrl
            });
            fileInfos = Arrays.extract(self.uploadFiles, "fileInfo");
            ngModelListener($scope, self.$ngModel, fileInfos);
          };
          this.deleteFile = function(fileMarker, callback) {
            var i, j, params, ref;
            for (i = j = 0, ref = self.uploadFiles.length - 1; j <= ref; i = j += 1) {
              if (self.uploadFiles[i].fileMarker == fileMarker) {
                params = {};
                $scope.keySetter(params, $scope.key);
                params["fileInfo"] = self.uploadFiles[i].fileInfo;
                params["fileIdProp"] = fileIdProp;
                angular.extend(params, $scope.deleteParams);
                $http.post.apply($scope, [self.deleteUrl, params]).success(function(result) {
                  var fileInfos;
                  self.uploadFiles.splice(i, 1);
                  if (angular.isFunction(callback)) {
                    callback();
                  }
                  fileInfos = Arrays.extract(self.uploadFiles, "fileInfo");
                  return ngModelListener($scope, self.$ngModel, fileInfos);
                });
                break;
              }
            }
          };
          this.initialShowCount = $attrs.initialShowCount || 1;
          this.initialShowCount = parseInt(this.initialShowCount, 10);
          this.addFileUpload = function() {
            var lastItemFileMarker;
            if ($scope.$root.$$phase) {
              lastItemFileMarker = $scope.items[$scope.items.length - 1]["fileMarker"];
              self.initialShowCount = parseInt(lastItemFileMarker, 10) + 1;
              $scope.items.push({
                "fileMarker": lastItemFileMarker + 1,
                fileInfo: {}
              });
            } else {
              $scope.$apply(function() {
                lastItemFileMarker = $scope.items[$scope.items.length - 1]["fileMarker"];
                self.initialShowCount = parseInt(lastItemFileMarker, 10) + 1;
                $scope.items.push({
                  "fileMarker": lastItemFileMarker + 1,
                  fileInfo: {}
                });
              });
            }
          };
          this.setPhotoElement =function(obj){
            $scope.photoElement = obj;
          }
        },
        replace: true,
        link: function($scope, $element, $attr, $ctrl) {

          /*摄像头*/
          $scope.photograph = $attr.photograph == 'true';
          $scope.photographUrl = $attr.photographUrl;
          $scope.showPhotograph = function(){
            $scope.photoElement.css("visibility","visible");
          }

          /*1.设置ngModel */
          var $ngModel, i, j, ref;
          $ctrl[1].$ngModel = $ctrl[0];

          /*2.根据默认数量显示数量 */
          $attr.initialShowCount = $attr.initialShowCount || 1;
          $attr.initialShowCount = parseInt($attr.initialShowCount, 10);
          $scope.items = [];
          for (i = j = 1, ref = $attr.initialShowCount; j <= ref; i = j += 1) {
            $scope.items.push({
              "fileMarker": i,
              "fileInfo": {}
            });
          }
          $ngModel = $ctrl[0];

          /*3.双向绑定 */
          if ($ngModel) {
            $ngModel.$render = function() {
              var fileInfo, imageShowUrl, k, l, ref1, ref2, showCount;
              if (!$ngModel.$isEmpty($ngModel.$viewValue)) {
                $scope.items = [];
                if (angular.isArray($ngModel.$viewValue)) {
                  showCount = $ngModel.$viewValue.length > $attr.initialShowCount ? $ngModel.$viewValue.length : $attr.initialShowCount;
                  $ctrl[1].initialShowCount = showCount + 1;
                  for (i = k = 1, ref1 = showCount; k <= ref1; i = k += 1) {
                    fileInfo = {};
                    fileInfo["id"] = $scope.fileIdGetter($ngModel.$viewValue[i - 1]);
                    fileInfo["fileName"] = $scope.fileNameGetter($ngModel.$viewValue[i - 1]);
                    if (i < $ngModel.$viewValue.length + 1) {
                      if ($ctrl[1].uploadType === "image" || isImageFile(fileInfo["fileName"])) {
                        imageShowUrl = $scope.imageShowUrlGetter($ngModel.$viewValue[i - 1]);
                      }
                      $ctrl[1].uploadFiles.push({
                        "fileMarker": "" + i,
                        "fileInfo": fileInfo,
                        "imageShowUrl": imageShowUrl
                      });
                    }
                    $scope.items.push({
                      "fileMarker": i,
                      "fileInfo": fileInfo,
                      "imageShowUrl": imageShowUrl
                    });
                  }
                  if ($attr.initialShowCount <= $ngModel.$viewValue.length) {
                    return $ctrl[1].addFileUpload();
                  }
                } else {
                  for (i = l = 1, ref2 = $attr.initialShowCount; l <= ref2; i = l += 1) {
                    if (i === 1) {
                      fileInfo = {};
                      fileInfo["id"] = $scope.fileIdGetter($ngModel.$viewValue);
                      fileInfo["fileName"] = $scope.fileNameGetter($ngModel.$viewValue);
                      if ($ctrl[1].uploadType === "image" || isImageFile(fileInfo["fileName"])) {
                        imageShowUrl = $scope.imageShowUrlGetter($ngModel.$viewValue);
                      }
                      $scope.items.push({
                        "fileMarker": "" + i,
                        "fileInfo": fileInfo,
                        "imageShowUrl": imageShowUrl
                      });
                      $ctrl[1].uploadFiles.push({
                        "fileMarker": i,
                        "fileInfo": fileInfo,
                        "imageShowUrl": imageShowUrl
                      });
                    } else {
                      $scope.items.push({
                        "fileMarker": "" + i,
                        "fileInfo": {}
                      });
                    }
                  }
                  if ($attr.initialShowCount === 1) {
                    return $ctrl[1].addFileUpload();
                  }
                }
              }
            };
          }
        }
      };
    });
  });

}).call(this);
