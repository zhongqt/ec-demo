// Generated by CoffeeScript 1.9.3
(function () {
    define(["angular", "underscore"], function (angular, _) {
        var ExportExcelService, exportExcelService;
        ExportExcelService = (function () {
            var createIframe, getDataSourceParams, getResponseMessage, id = 0;

            function ExportExcelService($http1, $rootScope1, GroupDataSources) {
                this.$http = $http1;
                this.$rootScope = $rootScope1;
                this.GroupDataSources = GroupDataSources;
                this.url = "/gillion-web/export/excel";
            }


            ExportExcelService.prototype.exportBackData = function (sourceName, key, isPrintAll, url, domain, callback, exportField, groups) {
                var me, dataSource, params = {}, groupDataSource;
                me = this;
                if (angular.isDefined(groups)) {
                    groupDataSource = me.GroupDataSources.get(sourceName);
                    dataSource = groupDataSource.pageDataSourceProxy;
                    if (angular.isString(groups)) {
                        params.groups = groups.split(",");
                    } else {
                        params.groups = groups;
                    }
                } else {
                    dataSource = me.$rootScope.dataSources[sourceName];
                }
                if (!!dataSource.storedExportParams) {
                    params = angular.extend(params, dataSource.storedExportParams);
                } else {
                    params = angular.extend(params, getDataSourceParams(dataSource));
                }
                if (angular.isFunction(params)) {
                    params = params();
                }
                params.key = key;
                params.isPrintAll = isPrintAll || "";
                params.domain = domain || "";
                if (angular.isDefined(exportField)) {
                    me.doPostExport(url, params, callback, exportField);
                } else {
                    me.doGetExport(url, params, callback);
                }
            };

            //打印后台数据
            ExportExcelService.prototype.doExport = function (sourceName, key, isPrintAll, url, domain, callback, exportField, groups) {
                this.exportBackData(sourceName, key, isPrintAll, url, domain, callback, exportField);
            };


            //以post请求的方式执行导出(参数太长问题)
            ExportExcelService.prototype.doPostExport = function (url, params, callback, exportField) {
                var iframe, form, input, requestUrl, el, ele,
                    me = this;
                if (_(exportField).isString()) {
                    params.exportField = exportField.split(",");
                } else if (_(exportField).isArray()) {
                    params.exportField = exportField;
                }
                if (url) {
                    requestUrl = url;
                } else {
                    requestUrl = me.url;
                }
                //创建iframe
                iframe = angular.element('<iframe src="javascript:false;" />');
                iframe.attr("name", "exportExcel" + id);
                iframe.attr("id", id);
                id = id + 1;
                iframe.css("display", "none");
                angular.element(document.body).append(iframe);
                //获取结果
                getResponseMessage(iframe[0], callback);
                //创建form
                form = angular.element("<form method='post'></form>");
                form.attr("style", "display:none");
                form.attr("action", requestUrl);
                form.attr("target", iframe.attr("name"));
                for (el in params) {
                    if (params.hasOwnProperty(el)) {
                        ele = params[el];
                        if (_(ele).isArray()) {
                            _(ele).each(function (value) {
                                input = angular.element("<input type='hidden' name='" + el + "'/>");
                                if (angular.isObject(value)) {
                                    input.attr("value", JSON.stringify(value));
                                } else {
                                    input.attr("value", value);
                                }
                                form.append(input);
                            });
                            if (ele.length == 0) {
                                input = angular.element("<input type='hidden' name='" + el + "'/>");
                                input.attr("value", "");
                                form.append(input);
                            }
                        } else {
                            input = angular.element("<input type='hidden' name='" + el + "'/>");
                            if (angular.isObject(ele)) {
                                input.attr("value", JSON.stringify(ele));
                            } else {
                                input.attr("value", ele);
                            }
                            form.append(input);
                        }
                    }
                }
                angular.element(document.body).append(form);
                //提交表单
                form.submit();
                //移删除表单
                form.remove();
            };

            //以get请求的方式执行导出
            ExportExcelService.prototype.doGetExport = function (url, params, callback) {
                var _frame, requestUrl, me = this, argumentStr = "";
                if (!_(url).isEmpty()) {
                    requestUrl = url;
                } else {
                    requestUrl = me.url;
                }
                _(params).each(function (value, key) {
                    if (_(value).isArray()) {
                        _(value).each(function (item) {
                            if (_(item).isObject()) {
                                argumentStr = argumentStr + key + "=" + encodeURIComponent(JSON.stringify(item)) + "&";
                            } else {
                                argumentStr = argumentStr + key + "=" + encodeURIComponent(item) + "&";
                            }
                        });
                    } else {
                        argumentStr = argumentStr + key + "=" + encodeURIComponent(value) + "&";
                    }
                });
                if (argumentStr.length > 0) {
                    requestUrl = requestUrl + "?" + argumentStr.substr(0, argumentStr.length - 1);
                }
                // _frame = createIframe(requestUrl);

                // _frame = document.createElement("iframe");
                // _frame.id = "exportexcel" + id;
                // id = id + 1;
                // _frame.style.display = "none";
                // getResponseMessage(_frame, callback);
                // document.body.appendChild(_frame);
                // if(window.navigator.userAgent.indexOf("Firefox") != -1) {
                //     _frame.contentWindow.location.href = iframe.src;
                // }
                //
                // _frame.src = requestUrl;

                window.open(requestUrl).addEventListener("beforeunload", function (resp) {
                    callback(resp)
                })
            };


            //打印前台数据
            ExportExcelService.prototype.exportData = function (data, key, callback, url, domain) {
                var iframe, form, input1, input2, input3;
                //创建iframe
                iframe = angular.element('<iframe src="javascript:false;" />');
                iframe.attr("name", "exportExcel" + id);
                iframe.attr("id", id);
                id = id + 1;
                iframe.css("display", "none");
                angular.element(document.body).append(iframe);
                //获取结果
                getResponseMessage(iframe[0], callback);
                //日期的处理
                data = transformDateToString(data);
                data = JSON.stringify(data);
                //创建form
                form = angular.element("<form method='post'></form>");
                form.attr("style", "display:none");
                form.attr("action", url);
                form.attr("target", iframe.attr("name"));
                input1 = angular.element("<input type='hidden' name='key'/>");
                input1.attr("value", key);
                form.append(input1);
                input2 = angular.element("<input type='hidden' name='data'/>");
                input2.attr("value", data);
                form.append(input2);
                if (domain) {
                    input3 = angular.element("<input type='hidden' name='domain''/>");
                    input3.attr("value", domain);
                    form.append(input3);
                }
                angular.element(document.body).append(form);
                //提交表单
                form.submit();
                //移删除表单
                form.remove();
            };

            /**
             * 为dataSource sourceName 注册监听，当有查询时，把当前查询条件保存到storedExportParams中
             * @param sourceName 数据源名称
             */
            ExportExcelService.prototype.registerSaveParamListener = function (sourceName) {
                var me = this, dataSource, groupDataSource;
                if (sourceName) {
                    groupDataSource = me.GroupDataSources.get(sourceName);
                    if (groupDataSource) {
                        dataSource = groupDataSource.pageDataSourceProxy;
                    }
                    if (angular.isUndefined(dataSource)) {
                        dataSource = me.$rootScope.dataSources[sourceName];
                    }
                    if (dataSource) {
                        me.$rootScope.$on(sourceName, function (event, _dataSource) {
                            dataSource.storedExportParams = getDataSourceParams(_dataSource);
                        });
                    }
                }
            };

            /**
             * 保存当前查询条件
             * @param sourceName 数据源名称
             */
            ExportExcelService.prototype.saveExportParams = function (sourceName) {
                var me = this, dataSource, groupDataSource;
                if (sourceName) {
                    groupDataSource = me.GroupDataSources.get(sourceName);
                    if (groupDataSource) {
                        dataSource = groupDataSource.pageDataSourceProxy;
                    }
                    if (angular.isUndefined(dataSource)) {
                        dataSource = me.$rootScope.dataSources[sourceName];
                    }
                    if (dataSource) {
                        dataSource.storedExportParams = getDataSourceParams(dataSource);
                    }
                }
            };


            //对数据中的所有日期做转换
            function transformDateToString(input) {
                var out, transformDateProperty;
                transformDateProperty = function (item) {
                    var ele = {};
                    _(item).each(function (el, key) {
                        if (angular.isDate(el) && Date.prototype.toISOString) {
                            ele[key] = el.toISOString();
                        } else {
                            ele[key] = el;
                        }
                    });
                    return ele;
                };
                out = _(input).map(function (item) {
                    return transformDateProperty(item);
                });
                return out;
            }

            //从dataSource中获取参数
            getDataSourceParams = function (dataSource) {
                var params, ele;
                params = angular.copy(dataSource.params);
                if (angular.isFunction(params)) {
                    params = params();
                }
                for (ele in params) {
                    if (params.hasOwnProperty(ele)) {
                        if (angular.isDate(params[ele])) {
                            params[ele] = params[ele].toISOString();
                        }
                        if (!params[ele]) {
                            params[ele] = "";
                        }
                    }
                }
                if (!params) {
                    params = {};
                }
                params.url = angular.copy(dataSource.url);
                if (dataSource.pageSize) {
                    params.pageSize = angular.copy(dataSource.pageSize);
                }
                if (dataSource.currentPage) {
                    params.currentPage = angular.copy(dataSource.currentPage);
                }
                if (dataSource.sortName) {
                    params.sortName = angular.copy(dataSource.sortName);
                }
                if (dataSource.sortDirection) {
                    params.sortDirection = angular.copy(dataSource.sortDirection);
                }
                return params;
            };


            //创建iframe对象
            createIframe = function (requestUrl) {
                var iframe;
                iframe = document.createElement("iframe");
                iframe.src = requestUrl;
                iframe.id = "exportexcel" + id;
                id = id + 1;
                iframe.style.display = "none";
                document.body.appendChild(iframe);
                if(window.navigator.userAgent.indexOf("Firefox") != -1) {
                    iframe.contentWindow.location.href = iframe.src;
                }                
                return iframe;
            };

            //获取返回值
            getResponseMessage = function (iframe, callback) {
                var doc, response, Msg;
                Msg = angular.element(document).injector().get("GillionMsg");
                
                var timer = setInterval(function() {
                    var doc = iframe.contentDocument || iframe.contentWindow.document;
                    if (doc.readyState == 'complete' || doc.readyState == 'interactive') {

                        if (doc.readyState && doc.readyState !== 'complete') {
                            angular.element(iframe).remove();
                            return;
                        }
                        if (doc.body && doc.body.innerHtml === 'false') {
                            angular.element(iframe).remove();
                            return;
                        }
                        if (doc.XMLDocument) {
                            response = doc.XMLDocument;
                        } else if (doc.body) {
                            response = doc.body.innerHTML;
                        } else {
                            response = {};
                        }
                        if (response) {
                            try {
                                response = new Function("return" + response)();
                                if (!angular.isUndefined(callback)) {
                                    callback(response);
                                } else {
                                    if (!response.success) {
                                        Msg.alert("提示信息", response.errorMessages);
                                    }
                                }
                            } catch (_error) {
                                Msg.alert("提示信息", "导出失败，请重试");
                            }
                        }else{
                            callback();
                        }

                        clearInterval(timer);
                        return;
                    }
                }, 1000);



                
            };
            return ExportExcelService;
        })();

        exportExcelService = void 0;
        return function ($http, $rootScope, GroupDataSources) {
            if (angular.isUndefined(exportExcelService)) {
                exportExcelService = new ExportExcelService($http, $rootScope, GroupDataSources);
            }
            return exportExcelService;
        };
    });
})();